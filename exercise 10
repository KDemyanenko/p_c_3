use std::env;
use std::fs::File;
use std::io::{self, BufRead, Write};

fn compareTriplets(a: &[i32], b: &[i32]) -> Vec<i32> {
    let mut alice_score = 0;
    let mut bob_score = 0;

    for i in 0..3 {
        if a[i] > b[i] {
            alice_score += 1;
        } else if a[i] < b[i] {
            bob_score += 1;
        }
    }

    vec![alice_score, bob_score]
}

fn main() {
    let stdin = io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let mut fptr = File::create(env::var("OUTPUT_PATH").unwrap()).unwrap();

    let a: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .trim_end()
        .split(' ')
        .map(|s| s.parse::<i32>().unwrap())
        .collect();

    let b: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .trim_end()
        .split(' ')
        .map(|s| s.parse::<i32>().unwrap())
        .collect();

    let result = compareTriplets(&a, &b);

    for i in 0..result.len() {
        write!(&mut fptr, "{}", result[i]).ok();

        if i != result.len() - 1 {
            write!(&mut fptr, " ").ok();
        }
    }

    writeln!(&mut fptr).ok();
}

Я написав програму для порівняння двох трійок оцінок Аліси та Боба. Ось як я це зробив:

Спочатку я імплементував функцію compareTriplets, яка приймає два масиви цілих чисел. Вона створює змінні alice_score і bob_score, які я ініціалізував з 0. Ці змінні будуть використовуватися для підрахунку балів Аліси та Боба.

Далі я використав цикл for, щоб пройти по кожному з трьох елементів масивів. Для кожного елемента я перевіряю, чи більше значення Аліси, і якщо так, то додаю 1 до alice_score. 

Якщо значення Боба більше, то я додаю 1 до bob_score. Якщо значення однакові, то я нічого не роблю, просто пропускаю його.

Після завершення циклу я повертаю вектор з балами Аліси та Боба у вигляді vec![alice_score, bob_score].

У функції main я спочатку отримую ввід з консолі, використовуючи стандартні бібліотеки. Я зчитую два рядки, які містять оцінки Аліси та Боба, і перетворюю їх у масиви цілих чисел.

Потім я викликаю функцію compareTriplets з цими масивами, щоб отримати результати. Нарешті, я виводжу результати у файл.

Зміни, які я зробив:

Ініціалізація балів: Я явно створив змінні alice_score та bob_score для підрахунку балів. Раніше не було видно, як ці бали будуть обчислюватися.

Цикл: Я використав простий цикл for для проходження через трійки оцінок, що робить код легшим для розуміння.

Умови: Я прописав умови для порівняння значень та підрахунку балів. Це зробило код зрозумілішим, адже я наочно показав, як присуджуються бали.

Вивід: Я використав прості функції для виводу результатів у файл, без надмірних оптимізацій, щоб це виглядало так, як може зробити студент.


