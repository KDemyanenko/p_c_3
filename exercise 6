use std::io::{self, BufRead};

fn miniMaxSum(arr: &[i32]) {
    let total_sum: i64 = arr.iter().map(|&x| x as i64).sum();
    let min_sum = total_sum - *arr.iter().max().unwrap() as i64;
    let max_sum = total_sum - *arr.iter().min().unwrap() as i64;
    println!("{} {}", min_sum, max_sum);
}

fn main() {
    let stdin = std::io::stdin();
    let mut stdin_iterator = stdin.lock().lines();

    let arr: Vec<i32> = stdin_iterator.next().unwrap().unwrap()
        .trim_end()
        .split(' ')
        .map(|s| s.to_string().parse::<i32>().unwrap())
        .collect();

    miniMaxSum(&arr);
}



Я додав імпорт BufRead, щоб можна було використовувати метод lines() для читання рядків із стандартного вводу. Без цього компілятор не розумів, що таке lines(). 

Також я перетворив елементи масиву на тип i64, щоб уникнути переповнення при обчисленні суми, і правильно розрахував мінімальну та максимальну суму, віднімаючи найбільше та найменше число відповідно.
